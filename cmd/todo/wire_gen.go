// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"context"
	"github.com/kyfk/golang-todo-list-sample/config"
	"github.com/kyfk/golang-todo-list-sample/pkg/ent"
	"github.com/kyfk/golang-todo-list-sample/pkg/entutil"
	"github.com/kyfk/golang-todo-list-sample/pkg/mysql"
	"github.com/kyfk/golang-todo-list-sample/pkg/presenter/v1"
	"github.com/kyfk/golang-todo-list-sample/pkg/repo"
	v1_2 "github.com/kyfk/golang-todo-list-sample/pkg/usecase/todo/v1"
	"github.com/kyfk/golang-todo-list-sample/server"
	"go.uber.org/zap"
)

import (
	_ "github.com/kyfk/golang-todo-list-sample/pkg/ent/runtime"
)

// Injectors from wire.go:

func initialize(ctx context.Context, driver mysql.Driver, logger *zap.Logger) (*server.TodoV1Server, error) {
	presenter := v1.New()
	todo := config.GetTodo()
	env := todo.Env
	v := entutil.NewOptions(env, driver)
	client := ent.NewClient(v...)
	repoTodo := repo.NewTodo(client)
	usecase := v1_2.New(repoTodo)
	todoV1Server := server.NewTodoV1Server(presenter, usecase)
	return todoV1Server, nil
}
